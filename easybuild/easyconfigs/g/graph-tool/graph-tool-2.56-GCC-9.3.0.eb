easyblock = 'ConfigureMake'

name = 'graph-tool'
version = '2.56'

homepage = 'https://graph-tool.skewed.de/'
description = """Graph-tool is an efficient Python module for manipulation and
 statistical analysis of graphs (a.k.a. networks). Contrary to
 most other python modules with similar functionality, the core
 data structures and algorithms are implemented in C++, making
 extensive use of template metaprogramming, based heavily on
 the Boost Graph Library. This confers it a level of
 performance that is comparable (both in memory usage and
 computation time) to that of a pure C/C++ library."""

toolchain = {'name': 'GCC', 'version': '9.3.0'}
toolchainopts = {'cstd': 'c++17'}

source_urls = ['https://downloads.skewed.de/%(name)s/']
sources = [SOURCE_TAR_BZ2]
checksums = ['a4979e4b84ca84d2c41adb8b03aad6730ee2739e228d55e32321d9c6b4d7b7e4']

builddependencies = [
    ('Boost', '1.80.0'),
    ('CGAL', '5.5.2'),
    ('oldest-supported-numpy', '2022a'),
    ('sparsehash', '2.0.4'),
]

# Boost.python has a bug with python 3.11
multi_deps = {'Python': ['3.9', '3.10']}

# Python CAIRO module is required by the configure script.
preconfigopts = " && ".join([
    "pip install pycairo --prefix=%(installdir)s",
    "export CPPFLAGS=-I%(installdir)s/lib/python%(pyshortver)s/site-packages/cairo/include",
    "export PYTHONPATH=$PYTHONPATH:%(installdir)s/lib/python%(pyshortver)s/site-packages",
    "" # To append &&
])

configopts = " ".join([
    '--enable-openmp',
    '--with-cgal=$EBROOTCGAL',
    '--with-boost=$EBROOTBOOST',
    '--with-boost-python',
    '--with-python-module-path=%(installdir)s/lib/python%(pyshortver)s/site-packages',
])

# Don't remove the PyCairo installation
keeppreviousinstall = True

sanity_check_paths = {
    'files': ['lib/python%(pyshortver)s/site-packages/graph_tool/all.py'],
    'dirs': ['lib/python%(pyshortver)s/site-packages/graph_tool/include'],
}

sanity_check_commands = [
    "module load scipy-stack && which python && python -c 'from graph_tool.all import graph_draw'"
]

modextrapaths = {'EBPYTHONPREFIXES': ''}

moduleclass = 'math'
