easyblock = 'CMakeMake'

name = 'GDAL'
version = '3.7.2'

homepage = 'https://www.gdal.org/'
description = """GDAL is a translator library for raster geospatial data formats that is released under an X/MIT style
 Open Source license by the Open Source Geospatial Foundation. As a library, it presents a single abstract data model
 to the calling application for all supported formats. It also comes with a variety of useful commandline utilities for
 data translation and processing."""

toolchain = {'name': 'gccflexiblas', 'version': '2023a'}

source_urls = ['https://download.osgeo.org/gdal/%(version)s']
sources = [SOURCELOWER_TAR_XZ]
patches = [
	'GDAL-3.7.2_fix-python-CC-CXX.patch',
	'GDAL-3.7.2_fix-python-CC-CXX-libtool.patch'
]
checksums = [
    {'gdal-3.7.2.tar.xz': '40c0068591d2c711c699bbb734319398485ab169116ac28005d8302f80b923ad'},
    {'GDAL-3.7.2_fix-python-CC-CXX.patch': '923d39620a87030ae5267c77c439d0050265e180afbdb81dadfbcf5def0fd013'},
    {'GDAL-3.7.2_fix-python-CC-CXX-libtool.patch': '276c3a4677db9208973312542cc0c79a40a6b9daf248c352b6ea7de73315c8b6'},
]

builddependencies = [
    ('CMake', '3.26.3'),
    ('SciPy-Stack', '2023b'),
    ('HDF', '4.2.16'),
    ('SWIG', '4.1.1'),
    ('pkgconf', '1.9.5'),
    ('Bison', '3.8.2'),
]

dependencies = [
    ('netCDF', '4.9.2'),
    ('expat', '2.5.0'),
    ('GEOS', '3.12.0'),
    ('SQLite', '3.42.0'),
    ('libxml2', '2.11.4'),
    ('libpng', '1.6.39'),
    ('libjpeg-turbo', '2.1.5.1'),
    ('JasPer', '4.0.0'),
    ('LibTIFF', '4.5.0'),
    ('zlib', '1.2.13'),
    ('cURL', '8.0.1'),
    ('PCRE', '8.45'),
    ('PROJ', '9.2.0'),
    ('libgeotiff', '1.7.1'),
    ('HDF5', '1.14.2'),
    ('Armadillo', '12.6.4'),
    ('CFITSIO', '4.3.0'),
    ('zstd', '1.5.5'),
    ('giflib', '5.2.1'),
    ('json-c', '0.16'),
    ('Xerces-C++', '3.2.4'),
    ('PCRE2', '10.42'),
    ('OpenEXR', '3.1.7'),
    ('Brunsli', '0.1'),
    ('Qhull', '2020.2'),
    ('LERC', '4.0.0'),
    ('OpenJPEG', '2.5.0'),
    ('PostgreSQL', '16.0'),
    ('libspatialite', '5.1.0'),
]

multi_deps = {'Python': ['3.10', '3.11']*2}
#multi_deps_extensions_only = True
#exts_defaultclass = 'PythonPackage'

#preconfigopts = "sed -e 's/-llapack/\$LIBLAPACK/g' -i.eb configure && "
#prebuildopts = 'export LDSHARED="$CC -shared" && '
#configopts = '--with-hdf5=$EBROOTHDF5 --with-hdf4=$EBROOTHDF --with-netcdf=$EBROOTNETCDF'
#configopts += ' --with-geos=$EBROOTGEOS/bin/geos-config'
#configopts += ' --with-python=$EBROOTPYTHON/bin/python'
#configopts += ' --with-libjson-c=internal'
#configopts += ' --with-sqlite3=$EBROOTSQLITE'
#configopts += ' --with-expat=$EBROOTGENTOO'
#configopts += ' --with-spatialite=$EBROOTLIBSPATIALITE'
#configopts += ' CPPFLAGS="$CFLAGS $(pkg-config --cflags libtirpc)" LIBS="$LIBS -ltirpc"'

# common configopts for static, shared library builds
_base_configopts = ' '.join([
    '-DGDAL_USE_INTERNAL_LIBS=OFF',
    #'-DArrow_DIR=$EBROOTARROW',
    '-DGEOTIFF_INCLUDE_DIR=$EBROOTLIBGEOTIFF/include',
    '-DPython_ROOT=$EBROOTPYTHON',
])

# iterative build for both static and shared libraries
configopts = [' '.join([_base_configopts, x]) for x in 2*['-DBUILD_SHARED_LIBS=OFF'] + 2*['']]

#postinstallcmds = [
#    "/cvmfs/soft.computecanada.ca/easybuild/bin/setrpaths.sh --path %(installdir)s --add_path %(installdir)s/lib"
#]

modextrapaths = {'EBPYTHONPREFIXES': '' }

sanity_check_paths = {
    'files': ['lib/libgdal.a', 'lib/libgdal.%s' % SHLIB_EXT],
    'dirs': ['bin', 'include', 'lib/python%(pyshortver)s/site-packages']
}

moduleclass = 'data'
