name = 'Gurobi'
version = '9.1.0'

homepage = 'https://www.gurobi.com'
description = """The Gurobi Optimizer is a state-of-the-art solver for mathematical programming.
The solvers in the Gurobi Optimizer were designed from the ground up to exploit modern
architectures and multi-core processors, using the most advanced implementations of the
latest algorithms."""

toolchain = SYSTEM

# Registration required so manually downloaded software into:
# sha256sum /cvmfs/restricted.computecanada.ca/easybuild/sources/g/Gurobi/gurobi9.1.0_linux64.tar.gz
# source_urls = ['https://packages.gurobi.com/%(version_major_minor)s/']
sources = ['%(namelower)s%(version)s_linux64.tar.gz']
checksums = ['92e2d8972d3f0edec9c35eb5a7d5bd50390c5526a04aef50d771d2dd9d94a16a']

# license_file = HOME + '/licenses/%(name)s/%(namelower)s.lic'
license_file = '/cvmfs/soft.computecanada.ca/config/licenses/gurobi/computecanada.lic'

postinstallcmds = [
    "for d in $(find %(installdir)s -name 'bin' -o -name 'lib'); \
	do echo Calling setrpaths.sh --path $d --add_path %(installdir)s/lib --add_path %(installdir)s/lib; \
	/cvmfs/soft.computecanada.ca/easybuild/bin/setrpaths.sh --path $d --add_path %(installdir)s/lib; done"
]

sanity_check_commands = ["gurobi_cl --help"]

modluafooter = """
require("SitePackage")
local found = find_and_define_license_file("GRB_LICENSE_FILE","gurobi")
if (not found) then
        local error_message = [[
        We did not find a suitable license for Gurobi. If you have access to one, you can create the file $HOME/.licenses/gurobi.lic  with the license information. If you think you should have access to one as part of your institution, please write to support@computecanada.ca so that we can configure it.

        Nous n'avons pas trouve de licence utilisable pour Gurobi. Si vous avez acces a une licence de Gurobi, vous pouvez creer le fichier $HOME/.licenses/gurobi.lic avec l'information de la licence. Si vous pensez que vous devriez automatiquement avoir acces a une licence via votre institution, veuillez ecrire a support@calculcanada.ca pour que nous puissions la configurer.
        ]]
        LmodError(error_message)
end
"""

moduleclass = 'math'
