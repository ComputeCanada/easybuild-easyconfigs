name = 'FlexiBLAS'
version = '3.3.1'

homepage = 'https://gitlab.mpi-magdeburg.mpg.de/software/flexiblas-release'
description = """FlexiBLAS is a wrapper library that enables the exchange of the BLAS and LAPACK implementation
used by a program without recompiling or relinking it."""

toolchain = {'name': 'NVHPC', 'version': '23.9'}
local_extra_flags = "-D__ELF__"
toolchainopts = {'pic': True, 'extra_cflags': local_extra_flags, 'extra_fflags': local_extra_flags}

source_urls = ['https://gitlab.mpi-magdeburg.mpg.de/api/v4/projects/386/packages/generic/flexiblas-source/v3.3.1/']
sources =  [SOURCELOWER_TAR_GZ]
patches = [
    'FlexiBLAS-3.0.4_fix-imkl.patch',
    'FlexiBLAS-3.0.4_fix-wrapper_blas_intel.patch',
    'FlexiBLAS-3.0.4_remove-semicolon.patch',
]

checksums = [
    'bbeebf5e5a006924558fec43f49affbe1aaa4cbacfc472a9ff6066ffda142e18',  # flexiblas-3.3.1.tar.gz
    'a078e46ad126574cc42314abd5b40461cdc6e950af79d105dbf92875c254c87c',  # FlexiBLAS-3.0.4_fix-imkl.patch
    '30ae7d1edbcff2beb18bca9b751dcaf0bf9a996d41fbe669b0a11592ec01c7ac',  # FlexiBLAS-3.0.4_fix-wrapper_blas_intel.patch
    'a3bbcff7aeca6f8bab989e7e3a8069f2b7b660e4559042221eecaa30dc0ce300',  # FlexiBLAS-3.0.4_remove-semicolon.patch
]

builddependencies = [
    ('CMake', '3.26.3'),
    ('Python', '3.11.5'),  # required for running the tests
    ('BLIS', '0.9.0'),
    ('OpenBLAS', '0.3.24'),
    # imkl is commented out, since installing it requires accepting the Intel oneAPI EULA;
    # note: also commented out the lines below to add imkl to 'backends'!
    ('imkl', {'arch=x86_64': '2023.2.0', 'arch=*': False}, '', True),
]

configopts = '-DABI=Intel'
configopts = [configopts + ' -DINTEGER8=ON -Dimkl_LIBRARY="mkl_intel_ilp64;mkl_intel_thread;mkl_core;iomp5;pthread;m;dl"', configopts]

# note: first listed backend will be used as default by FlexiBLAS,
# unless otherwise specified via easyconfig parameter flexiblas_default
local_backends = ['OpenBLAS', 'BLIS']

if ARCH == 'x86_64':
    local_backends.append('imkl')

backends = local_backends
flexiblas_default = 'imkl'

# Install LAPACKe as extension; it's not a Python package, but this extension class can be
# used anyway to build it.
exts_defaultclass = 'CMakePythonPackage'
exts_list = [
    ('LAPACK', '3.11.0', {
        'easyblock': 'CMakePythonPackage',
        'source_urls': ['https://github.com/Reference-LAPACK/lapack/archive/'],
        'sources': ['v%(version)s.tar.gz'],
	'checksums': ['4b9ba79bfd4921ca820e83979db76ab3363155709444a787979e81c22285ffa9'],
        'preconfigopts': 'module unload imkl && ',
        'configopts': ('-DBUILD_SHARED_LIBS=ON -DUSE_OPTIMIZED_BLAS=ON -DLAPACKE=ON '
                       '-DUSE_OPTIMIZED_LAPACK=ON -DBUILD_DEPRECATED=ON '
                       '-DCMAKE_INSTALL_INCLUDEDIR=%(installdir)s/include/flexiblas'),
        'installopts': ' && rm %(installdir)s/lib64/pkgconfig/{lapack,lapacke}.pc',
        'sanity_check_paths': {
            'files': ['lib/liblapacke.%s' % SHLIB_EXT, 'include/flexiblas/lapacke.h'],
            'dirs': [],
        },
	'modulename': False, # skips Python-specific sanity check
    }),
]

postinstallcmds = [
    # symlink to be able to use the GCC-compiled FlexiBLAS; the Intel-compiled one is called
    # libflexiblas_intel.so.
    'ln -s ../../../../../Core/%(namelower)score/%(version)s/lib64/libflexiblas.so{,.3,.3.3} %(installdir)s/lib64',
]

moduleclass = 'lib'
