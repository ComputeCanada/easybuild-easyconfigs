easyblock = 'CMakeMake'

name = 'OpenMM'
version = '7.5.1'
modaltsoftname = "openmm-alphafold"

homepage = 'http://openmm.org'
description = "OpenMM is a toolkit for molecular simulation."

toolchain = {'name': 'gomkl', 'version': '2020a'}
toolchainopts = {'opt': True}

source_urls = ['https://github.com/openmm/openmm/archive/']
sources = ['%(version)s.tar.gz']
patches = ['%(name)s-%(version)s-alphafold.patch']
checksums = [
    "c88d6946468a2bde2619acb834f57b859b5e114a93093cf562165612e10f4ff7",  # "7.5.1.tar.gz"
    "85339f17414d0d877079291b53ff85d7b6934ab0b8157f8055abf9a4e1acd5a0",  #  OpenMM-7.5.1-alphafold.patch
]

multi_deps = {'Python': ["3.7", "3.8"]}

dependencies = [
    ('FFTW', '3.3.8', '-mpi'),
    ('SciPy-Stack', '2020b'),
    ('SWIG', '3.0.12'),
]

separate_build_dir = True

configopts = " ".join([
    '-DOPENMM_GENERATE_API_DOCS=OFF',
    '-DOPENMM_BUILD_CUDA_LIB=OFF',
    '-DOPENMM_BUILD_OPENCL_LIB=OFF',
    '-DPYTHON_EXECUTABLE=$EBROOTPYTHON/bin/python3',
])

preinstallopts = ' && '.join([
    'export OPENMM_INCLUDE_PATH=%(installdir)s/include',
    'export OPENMM_LIB_PATH=%(installdir)s/lib',
    '',
])

installopts = ' && '.join([
    "&& cd python",
    "python setup.py build",
    "python setup.py install --prefix=%(installdir)s",
])

# Exclude some tests (regexps).  Can't test TestCuda* b/c there's no GPU in build-node.
runtest = """test -e ARGS="-E \'TestCuda|TestOpenCL\'" """

exts_defaultclass = 'PythonPackage'
exts_list = [
    ('pdbfixer', '1.7', {
        'checksums': ['a0bef3c52a7bbe69a6aea5333f51f3e7d158339be5829aed19b0344bd66d4eea'],
        'source_urls': ['https://github.com/openmm/pdbfixer/archive/refs/tags'],
        'sources' : ['v%(version)s.tar.gz'],
        'use_pip': True,
        'preinstallopts': '',  # Override so we do not use the defined preinstallopts
        'installopts': '',  # Override so we do not use the defined installopts
        'runtest': False,
    }),
]
exts_filter = ("python -c 'import %(ext_name)s'", '')

sanity_check_paths = {
    'files': [
        'include/OpenMM.h',
        'lib/python%(pyshortver)s/site-packages/simtk/openmm/openmm.py',
        'lib/libOpenMM.so',
    ],
    'dirs': [
        'bin',
        'include',
        'include/openmm',
        'lib',
    ]
}

sanity_check_commands = [
    "python%(pyshortver)s -m simtk.testInstallation"
]

modextrapaths = {
    'EBPYTHONPREFIXES': '',
    'OPENMM_INCLUDE_PATH': 'include',
    'OPENMM_LIB_PATH': 'lib',
}

# if some python is already loaded, use it, otherwise use default python module
modluafooter = """
if convertToCanonical(LmodVersion()) >= convertToCanonical("8.2.9") then
        depends_on(between("python",'3.7<','<3.9'))
end
family("%(namelower)s")
"""

moduleclass = 'bio'
