easyblock = 'ConfigureMake'

name = 'OpenMPI'
version = '1.6.5'

homepage = 'http://www.open-mpi.org/'
description = """The Open MPI Project is an open source MPI-2 implementation."""

toolchain = {'name': 'iccifort', 'version': '2016.4'}

sources = [SOURCELOWER_TAR_GZ]

source_urls = ['http://www.open-mpi.org/software/ompi/v%(version_major_minor)s/downloads',]

patches = ['OpenMPI-%(version)s-mca-btl-openib-device-params.patch']

# need to comment this line from the configure file
preconfigopts = "sed -i configure -e '/export LD_LIBRARY_PATH/ s/^#*/#/' && "

configopts = '--with-threads=posix --enable-shared --with-verbs '
configopts += '--enable-mpirun-prefix-by-default '  # suppress failure modes in relation to mpirun path
configopts += '--with-hwloc=$NIXUSER_PROFILE '  # hwloc support
configopts += '--without-usnic ' # No usnic-via-libfabric
configopts += '--disable-wrapper-rpath ' # rpath is already done by Nix ld wrapper
#configopts += '--disable-io-romio '
#configopts += '--disable-vt '
configopts += '--with-munge ' #enable Munge in PMIx
configopts += '--with-libltdl=$NIXUSER_PROFILE '
#configopts += '--enable-pmix-backward-compatibility --disable-pmix-dstore '
configopts += '--with-pmi=$NIXUSER_PROFILE '
configopts += '--enable-mpi-cxx '

# enumerate all mca's that should be compiled as plugins (only those that link to system-specific
# libraries (lustre, fabric, and scheduler)
configopts += '--enable-mca-dso=common-libfabric,common-verbs,atomic-mxm,btl-openib,btl-scif,'
configopts += 'coll-fca,fs-lustre,mtl-mxm,mtl-ofi,mtl-psm,mtl-psm2,'
configopts += 'oob-ud,plm-tm,pmix-pmix112,pml-yalla,ras-tm,scoll-mca,sec-munge,spml-ikrit, '


postinstallcmds = ['rm %(installdir)s/lib/*.la %(installdir)s/lib/*/*.la']

libs = ["mpi", "ompitrace", "open-pal", "open-rte"]
sanity_check_paths = {
    'files': ["bin/%s" % binfile for binfile in ["ompi_info", "opal_wrapper", "orterun"]] +
             ["lib/lib%s.%s" % (libfile, SHLIB_EXT) for libfile in libs] +
             ["include/%s.h" % x for x in ["mpi-ext", "mpif-config", "mpif", "mpi", "mpi_portable_platform"]],
    'dirs': [],
}

moduleclass = 'mpi'

modluafooter = """
assert(loadfile("/cvmfs/soft.computecanada.ca/config/lmod/openmpi_custom.lua"))("%(version_major_minor)s")

add_property("type_","mpi")
family("mpi")
"""
