name = 'OpenMPI'
version = '4.0.2'

homepage = 'https://www.open-mpi.org/'
description = """The Open MPI Project is an open source MPI-3 implementation."""

toolchain = {'name': 'iccifort', 'version': '2020.0.166'}

source_urls = ['https://www.open-mpi.org/software/ompi/v%(version_major_minor)s/downloads']
sources = [SOURCELOWER_TAR_GZ]
checksums = [
    '662805870e86a1471e59739b0c34c6f9004e0c7a22db068562d5388ec4421904', # tarball
]

configopts = '--enable-shared --with-verbs '
configopts += '--enable-mpirun-prefix-by-default '  # suppress failure modes in relation to mpirun path
configopts += '--with-hwloc=external '  # hwloc support
configopts += '--without-usnic ' # No usnic-via-libfabric
configopts += '--with-ucx '
configopts += '--disable-wrapper-runpath --disable-wrapper-rpath ' # rpath is already done by ld wrapper
configopts += '--with-munge ' #enable Munge in PMIx
configopts += '--with-slurm --with-pmi=/cvmfs/soft.computecanada.ca/gentoo/2019/usr '
configopts += '--enable-mpi-cxx '
configopts += '--with-hcoll '
configopts += '--disable-show-load-errors-by-default '
configopts += '--enable-mpi1-compatibility '

# enumerate all mca's that should be compiled as plugins (only those that link to system-specific
# libraries (lustre, fabric, and scheduler)
configopts += '--enable-mca-dso=common-ucx,common-verbs,event-external,atomic-ucx,btl-openib,'
configopts += 'coll-hcoll,ess-tm,fs-lustre,mtl-ofi,mtl-psm,mtl-psm2,osc-ucx,'
configopts += 'plm-tm,pmix-s1,pmix-s2,pml-ucx,pnet-opa,psec-munge,'
configopts += 'ras-tm,spml-ucx,sshmem-ucx,hwloc-external '
configopts += '--enable-mca-no-build=btl-uct '

# to enable SLURM integration (site-specific)
# configopts += '--with-slurm --with-pmi=/usr/include/slurm --with-pmi-libdir=/usr'

postinstallcmds = [
  'rm %(installdir)s/lib/*.la %(installdir)s/lib/*/*.la',
]

moduleclass = 'mpi'

modluafooter = """
assert(loadfile("/cvmfs/soft.computecanada.ca/config/lmod/openmpi_custom.lua"))("%(version_major_minor)s")

add_property("type_","mpi")
family("mpi")
"""
