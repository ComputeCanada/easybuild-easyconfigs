easyblock = 'ConfigureMake'

name = 'OpenMPI'
version = '3.1.2'

homepage = 'http://www.open-mpi.org/'
description = """The Open MPI Project is an open source MPI-3 implementation."""

toolchain = {'name': 'iccifortcuda', 'version': '2018.3.100'}

source_urls = ['http://www.open-mpi.org/software/ompi/v%(version_major_minor)s/downloads']
sources = [SOURCELOWER_TAR_GZ]
checksums = ['363c8a1258d12df28657e9b13bfe41e30fc129a4cfb89fcf53ff68bbe1bd65b3']

preconfigopts = 'sed -i "s!/usr/include/slurm!$NIXUSER_PROFILE/include/slurm!g" configure && '
preconfigopts += 'LDFLAGS="$LDFLAGS -L$EBROOTGCCCORE/lib -L$NIXUSER_PROFILE/lib" ' # for libtool to find .la files
configopts = '--enable-shared --with-verbs '
configopts += '--enable-mpirun-prefix-by-default '  # suppress failure modes in relation to mpirun path
configopts += '--with-hwloc=external '  # hwloc support
configopts += '--without-usnic ' # No usnic-via-libfabric
configopts += '--with-ucx '
configopts += '--with-cuda=$CUDA_HOME '             # CUDA-aware build; N.B. --disable-dlopen is incompatible
configopts += '--disable-wrapper-runpath --disable-wrapper-rpath ' # rpath is already done by Nix ld wrapper
configopts += '--with-munge ' #enable Munge in PMIx
#configopts += '--enable-pmix-backward-compatibility --disable-pmix-dstore '
configopts += '--with-pmi '
configopts += '--enable-mpi-cxx '
configopts += '--with-hcoll '

# enumerate all mca's that should be compiled as plugins (only those that link to system-specific
# libraries (lustre, fabric, and scheduler)
configopts += '--enable-mca-dso=common-libfabric,common-ofi,common-verbs,atomic-mxm,btl-openib,btl-scif,'
configopts += 'coll-fca,coll-hcoll,ess-pmi,ess-tm,fs-lustre,mtl-mxm,mtl-ofi,mtl-psm,mtl-psm2,osc-ucx,'
configopts += 'oob-ud,plm-tm,pmix-pmix112,pml-ucx,pml-yalla,pnet-opa,psec-munge,'
configopts += 'ras-tm,rml-ofi,scoll-mca,sec-munge,spml-ikrit, '

# to enable SLURM integration (site-specific)
# configopts += '--with-slurm --with-pmi=/usr/include/slurm --with-pmi-libdir=/usr'

postinstallcmds = ['rm %(installdir)s/lib/*.la %(installdir)s/lib/*/*.la']

libs = ["mpi_mpifh", "mpi", "ompitrace", "open-pal", "open-rte"]
sanity_check_paths = {
    'files': ["bin/%s" % binfile for binfile in ["ompi_info", "opal_wrapper", "orterun"]] +
             ["lib/lib%s.%s" % (libfile, SHLIB_EXT) for libfile in libs] +
             ["include/%s.h" % x for x in ["mpi-ext", "mpif-config", "mpif", "mpi", "mpi_portable_platform"]],
    'dirs': [],
}

moduleclass = 'mpi'

modluafooter = """
assert(loadfile("/cvmfs/soft.computecanada.ca/config/lmod/openmpi_custom.lua"))("%(version_major_minor)s")

add_property("type_","mpi")
family("mpi")
"""
