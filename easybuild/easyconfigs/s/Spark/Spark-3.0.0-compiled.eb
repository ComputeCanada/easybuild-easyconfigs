easyblock = 'CmdCp'

name = 'Spark'
version = '3.0.0'
versionsuffix = '-compiled'

homepage = 'http://spark.apache.org'
description = """Spark is Hadoop MapReduce done in memory"""

toolchain = SYSTEM

sources = ['%(namelower)s-%(version)s.tgz']
source_urls = [
    'http://apache.belnet.be/%(namelower)s/%(namelower)s-%(version)s/',
    'http://www.eu.apache.org/dist/%(namelower)s/%(namelower)s-%(version)s/',
    'http://www.us.apache.org/dist/%(namelower)s/%(namelower)s-%(version)s/',
]
checksums = [
    "e062b091b9e548b1960e05f46e64067c5bac0c5c27d0d1fc5d096cd266edf845", # Spark-3.0.0.tgz
    "d372269cfb6080eaf201f6c675c38a83ffc1c82624baa5d8948d55f612ee9c2e"  # Spark-3.0.0.patch
]

patches = [('%(name)s-%(version)s.patch', 1)]

builddependencies = [
    ('iimkl', '2020a'),
    ('R', '4.0.0', '', ('gcccoremkl', '2020a'))
]

dependencies = [
    ('Java', '11.0.2')
]

cmds_map = [
    ('.*', "dev/make-distribution.sh -Psparkr -Pnetlib-lgpl")
]

postinstallcmds = [
    'mkdir %(installdir)s/lib',
    'ln -sf $MKLROOT/lib/intel64/libmkl_rt.so %(installdir)s/lib/libblas.so.3',
    'ln -sf $MKLROOT/lib/intel64/libmkl_rt.so %(installdir)s/lib/liblapack.so.3',
    'ln -sf $MKLROOT/lib/intel64/libmkl_core.so %(installdir)s/lib/',
    'ln -sf $MKLROOT/lib/intel64/libmkl_intel_thread.so %(installdir)s/lib/',
    'ln -sf $MKLROOT/lib/intel64/libmkl_intel_lp64.so %(installdir)s/lib/',
    'ln -sf $MKLROOT/lib/intel64/libmkl_def.so %(installdir)s/lib/',
    'ln -sf $EBROOTIMKL/lib/intel64/libiomp5.so %(installdir)s/lib/',
    'mkdir netlib',
    'unzip -j %(installdir)s/jars/netlib-native_system-linux-x86_64-1.1-natives.jar -d netlib/ netlib-native_system-linux-x86_64.so',
    '/cvmfs/soft.computecanada.ca/easybuild/bin/setrpaths.sh --path netlib --add_path %(installdir)s/lib',
    'jar -uf %(installdir)s/jars/netlib-native_system-linux-x86_64-1.1-natives.jar -C netlib/ netlib-native_system-linux-x86_64.so',
    'rm -rf netlib',
    'rm -f %(installdir)s/jars/netlib-{*native_ref*,*osx*,*win*,*linux-armhf*,*linux*i686*}.jar',
    'rm %(installdir)s/bin/*.cmd',
]

files_to_copy = ['dist/*']

sanity_check_paths = {
    'files': ['bin/spark-shell', 'bin/pyspark', 'bin/sparkR'],
    'dirs': ['bin', 'conf', 'python', 'R', 'sbin']
}

sanity_check_commands = [
    "module load python && python -c 'import pyspark'"
]

modextrapaths = {
    'PYTHONPATH': ['python', 'python/lib/py4j-0.10.9-src.zip'],
    'R_LIBS_SITE': ['R/lib']
}

modextravars =  {'SPARK_HOME': '%(installdir)s'}

moduleclass = 'devel'

modluafooter = """setenv("SPARK_CONF_DIR", pathJoin(os.getenv('HOME'), ".spark/%(version)s/conf"))
setenv("SPARK_LOG_DIR", pathJoin(os.getenv('HOME'), ".spark/%(version)s/log"))
setenv("SPARK_USER", os.getenv('USER'))
"""
