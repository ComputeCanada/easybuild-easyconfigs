easyblock = 'MakeCp'

name = 'HISAT2'
version = '2.1.0'

homepage = 'https://ccb.jhu.edu/software/hisat2/index.shtml'
description = """HISAT2 is a fast and sensitive alignment program for mapping next-generation sequencing reads
 (both DNA and RNA) against the general human population (as well as against a single reference genome)."""

toolchain = {'name': 'iccifort', 'version': '2016.4'}

sources = ['%(namelower)s-%(version)s-source.zip']
source_urls = ['ftp://ftp.ccb.jhu.edu/pub/infphilo/%(namelower)s/downloads/']

checksums = ['8b566d1b7e6c5801c8ae9824ed2da3d0']

dependencies = [
    ('SAMtools', '1.3.1'),
    ('Python', '2.7.14')
]

#buildopts = "USE_SRA=1 NCBI_NGS_DIR=$EBROOTNGS NCBI_VDB_DIR=$EBROOTNCBIMINVDB"

local_executables = [
    'hisat2',
    'hisat2-align-l',
    'hisat2-align-s',
    'hisat2-build',
    'hisat2-build-l',
    'hisat2-build-s',
    'hisat2-inspect',
    'hisat2-inspect-s',
    'hisat2-inspect-l'
]

local_shell_scripts = [
    "scripts/convert_quals.pl",
    "scripts/gen_2b_occ_lookup.pl",
    "scripts/gen_occ_lookup.pl",
    "scripts/gen_solqual_lookup.pl",
    "scripts/infer_fraglen.pl",
    "scripts/make_a_thaliana_tair.sh",
    "scripts/make_bdgp6.sh",
    "scripts/make_bdgp6_tran.sh",
    "scripts/make_b_taurus_UMD3.sh",
    "scripts/make_canFam2.sh",
    "scripts/make_ce10.sh",
    "scripts/make_dm6.sh",
    "scripts/make_e_coli.sh",
    "scripts/make_grch37.sh",
    "scripts/make_grch37_snp.sh",
    "scripts/make_grch37_snp_tran_ercc.sh",
    "scripts/make_grch37_snp_tran.sh",
    "scripts/make_grch37_tran.sh",
    "scripts/make_grch38.sh",
    "scripts/make_grch38_snp.sh",
    "scripts/make_grch38_snp_tran_ercc.sh",
    "scripts/make_grch38_snp_tran.sh",
    "scripts/make_grch38_tran.sh",
    "scripts/make_grcm38.sh",
    "scripts/make_grcm38_snp.sh",
    "scripts/make_grcm38_snp_tran.sh",
    "scripts/make_grcm38_tran.sh",
    "scripts/make_hg19.sh",
    "scripts/make_hg38_allsnp.sh",
    "scripts/make_hg38.sh",
    "scripts/make_hg38_snp.sh",
    "scripts/make_hg38_snp_tran.sh",
    "scripts/make_mm10.sh",
    "scripts/make_mm9.sh",
    "scripts/make_r64.sh",
    "scripts/make_r64_tran.sh",
    "scripts/make_rn4.sh",
    "scripts/make_rn6.sh",
    "scripts/make_rnor6.sh",
    "scripts/make_rnor6_tran.sh",
    "scripts/make_sc3.sh",
    "scripts/make_wbcel235.sh",
    "scripts/make_wbcel235_tran.sh",
    "scripts/make_zm3_snp_tran_ercc.sh",
]

local_python_scripts = [
    "hisatgenotype_build_genome.py",
    "hisatgenotype_extract_vars.py",
    "hisatgenotype_extract_reads.py",
    "hisat2_extract_snps_haplotypes_VCF.py",
    "hisatgenotype.py",
    "extract_splice_sites.py",
    "hisatgenotype_modules/hisatgenotype_assembly_graph.py",
    "hisatgenotype_modules/hisatgenotype_typing_common.py",
    "hisatgenotype_modules/__init__.py",
    "hisatgenotype_modules/hisatgenotype_extract_cyp_data.py",
    "hisatgenotype_modules/hisatgenotype_extract_codis_data.py",
    "hisatgenotype_modules/hisatgenotype_convert_codis.py",
    "hisatgenotype_modules/hisatgenotype_gene_typing.py",
    "hisatgenotype_hla_cyp.py",
    "extract_exons.py",
    "hisatgenotype_scripts/extract_Omixon_HLA.py",
    "hisatgenotype_scripts/hisatgenotype_HLA_genotyping_PGs.py",
    "hisatgenotype_scripts/compare_HLA_Omixon.py",
    "hisatgenotype_scripts/hisatgenotype_locus_samples.py",
    "hisat2_simulate_reads.py",
    "hisatgenotype_locus.py",
    "hisat2_extract_exons.py",
    "hisat2_extract_splice_sites.py",
    "hisat2_extract_snps_haplotypes_UCSC.py",
]

files_to_copy = [
    (local_executables, 'bin'),
    (['*.py'], 'bin'),
    (["hisatgenotype_modules/*"], 'bin/hisatgenotype_modules'),
    (["hisatgenotype_scripts/*"], 'bin/hisatgenotype_scripts'),
    'scripts',
    'doc',
    'example',
]

sanity_check_paths = {
    'files': ["bin/%s" % x for x in list(local_executables + local_python_scripts)] + local_shell_scripts,
    'dirs': ["bin", "scripts", 'doc', 'example'],
}

moduleclass = 'bio'
