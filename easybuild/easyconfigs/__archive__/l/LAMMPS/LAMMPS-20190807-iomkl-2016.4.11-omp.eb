##
# Contributor: 
# Ali Kerrache, April 2017.
# Maxime Boissonneault, June 2017
##

name = 'LAMMPS'

# see http://lammps.sandia.gov/bug.html 
# for overview of stable versions and matching date/SVN rev/Git tag

version = '20190807'
versiondate = "7Aug19"
versionsuffix = '-omp'
modaltsoftname = 'lammps-omp'

homepage = 'http://lammps.sandia.gov/'
description = """ LAMMPS (Large-scale Atomic/Molecular Massively Parallel Simulator) is 
 a classical molecular dynamics simulation. LAMMPS has potentials for solid-state materials 
 (metals, semiconductors) and soft matter (biomolecules, polymers) and coarse-grained or 
 mesoscopic systems. It can be used to model atoms or, more generically, as a parallel 
 particle simulator at the atomic, meso, or continuum scale. It can be coupled to various 
 programs. The following packages are not included within this version:
"""

toolchain = {'name': 'iomkl', 'version': '2016.4.11'}
toolchainopts = {'usempi': True, 'openmp': True, 'pic': True}

source_urls = ['https://lammps.sandia.gov/tars/']
sources = ['%%(namelower)s-%s.tar.gz' % versiondate]

patches = [
    'vmd-1.9.3-plugins-%(name)s-%(version)s.patch',
    '%(namelower)s-%(version)s-ebroot.patch',
]

# List of packages for the current version: 72 packages.

# ASPHERE BODY CLASS2 COLLOID COMPRESS CORESHELL DIPOLE GPU 
# GRANULAR KIM KOKKOS KSPACE LATTE MANYBODY MC MESSAGE MISC 
# MOLECULE MPIIO MSCG OPT PERI POEMS PYTHON QEQ REPLICA RIGID 
# SHOCK SNAP SPIN SRD VORONOI  USER-ADIOS USER-ATC USER-AWPMD 
# USER-BOCS USER-CGDNA USER-CGSDK USER-COLVARS USER-DIFFRACTION 
# USER-DPD USER-DRUDE USER-EFF USER-FEP USER-H5MD USER-INTEL 
# USER-LB USER-MANIFOLD USER-MEAMC USER-MESO USER-MGPT USER-MISC 
# USER-MOFFF USER-MOLFILE USER-NETCDF USER-OMP USER-PHONON 
# USER-PLUMED USER-PTM USER-QMMM USER-QTB USER-QUIP USER-REAXC 
# USER-SCAFACOS USER-SMD USER-SMTBQ USER-SDPD USER-SPH USER-TALLY 
# USER-UEF USER-VTK USER-YAFF

# New packages:

# LATTE MESSAGE SPIN USER-ADIOS USER-BOCS USER-MESO USER-MOFFF 
# USER-PLUMED USER-PTM USER-SCAFACOS USER-SDPD USER-UEF USER-YAFF

dependencies = [
    ('Python', '2.7.14'),
    ('HDF5','1.8.18'),
    ('Eigen', '3.3.2'),
    ('Voro++', '0.4.6'),
    ('VTK', '6.3.0'),
    ('KIM', '2.1.3'),
    ('CSLIB', '20180813'),
    ('LATTE', '1.2.1'),
    #('PLUMED', '2.5.2'),
    #('MSCG', '1.7.3.1'),
    #('Quip', '1.1.8'),
    ('FFTW', '3.3.6', '-mpi'),
    #('FFmpeg', '3.1.7', "-nix"),
    ('netCDF', '4.4.1.1'),
    #('QuantumESPRESSO', '6.1'),
    ('tbb', '2017.2.132'),
]

# Will go to the lib/PKGLIB folder and use "make -f <makefile>" 
# where <makefile> is the most appropriate makefile (in order, 
# mpicc, mpic++, cc, cxx, f90, gcc, g++, gfortran, 
# lammps) for each PKGLIB in packaged_libraries:

packaged_libraries = [ 
    #('qmmm', 'Makefile.ifort'), 
    ('poems', 'Makefile.mpi'),      # Works also with: Makefile.icc 
    ('reax', 'Makefile.mpi'),       # Works also with: Makefile.ifort
    ('atc', 'Makefile.icc'),  
    ('awpmd', 'Makefile.mpicc'), 
    ('colvars', 'Makefile.mpi'),
    ('h5md', 'Makefile.h5cc'),
]

# Will run "make yes-PKG" for each PKG in this list:

packages_yes = [
    "ASPHERE", "BODY", "CLASS2", "COLLOID", "COMPRESS", "CORESHELL", "DIPOLE", 
    "GRANULAR", "KIM", #"KOKKOS",
    "KSPACE", #"LATTE", 
    "MESSAGE", "MANYBODY", "MC", "MISC", "MOLECULE", "MPIIO", #"MSCG",
    "OPT", "PERI", "POEMS", "PYTHON", "QEQ", "REPLICA", "RIGID", "SHOCK", "SNAP", 
    "SPIN", "SRD", "VORONOI", #"USER-ADIOS", 
    "USER-ATC", "USER-AWPMD", #"USER-BOCS",
    "USER-CGDNA", "USER-CGSDK", 
    "USER-COLVARS", "USER-DIFFRACTION", "USER-DPD", "USER-DRUDE", "USER-EFF", 
    "USER-FEP", "USER-H5MD", "USER-INTEL", "USER-LB", "USER-MANIFOLD", "USER-MEAMC", 
    "USER-MESO", "USER-MGPT", "USER-MISC", "USER-MOFFF", "USER-MOLFILE", "USER-NETCDF", 
    "USER-OMP", "USER-PHONON", #"USER-PLUMED",
    "USER-PTM", #"USER-QMMM", 
    "USER-QTB", #"USER-QUIP", 
    "USER-REAXC", #"USER-SCAFACOS",
    "USER-SMD", "USER-SMTBQ", "USER-SDPD", "USER-SPH", "USER-TALLY", "USER-UEF", 
    "USER-VTK",
] 

# Will run "make no-PKG" for each PKG in this list:

packages_no = [ 
    "GPU",  
]

# Decide what directories to include in the installation directory:

build_doc = False        # Includes the "doc" directory.
build_examples = False   # Includes "examples" directory.
build_bench = False      # Includes "bench" directory.
build_tools = False      # Build the tools.

build_type = "icc_openmpi"

build_shared_libs = False
build_static_libs = False

modextravars =  {
    'LAMMPS_EXAMPLES': '%(installdir)s/share/examples',
    'LAMMPS_POTENTIALS': '%(installdir)s/share/potentials',
}

modloadmsg = """ For more more information about the packages within this version:

  1. To see the installed packages: 
     cat ${EBROOTLAMMPS}/list-packages.txt | grep -a "Installed YES:"
  2. To see the non-installed packages: 
     cat ${EBROOTLAMMPS}/list-packages.txt | grep -a "Installed  NO:"

"""

moduleclass = 'chem'
modluafooter = """
family("lammps")
"""
