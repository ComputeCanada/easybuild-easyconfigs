--- qzhudfci-cutruntools-1d884456d2b9/create_scripts.py.orig	2019-08-09 16:48:06.682318320 +0000
+++ qzhudfci-cutruntools-1d884456d2b9/create_scripts.py	2019-08-09 20:45:24.809466507 +0000
@@ -20,13 +20,14 @@
 #SBATCH -N 1                               # Request one node (if you request more than one core with -n, also using
                                            # -N 1 means all cores will be on the same node)
 #SBATCH -t %s                         # Runtime in D-HH:MM format
-#SBATCH -p %s                           # Partition to run in
 #SBATCH --mem=%d                        # Memory total in MB (for all cores)
 #SBATCH -o hostname_%%j.out                 # File to which STDOUT will be written, including job ID
 #SBATCH -e hostname_%%j.err                 # File to which STDERR will be written, including job ID
 #SBATCH --mail-type=ALL                    # Type of email notification- BEGIN,END,FAIL,ALL
 #SBATCH --mail-user=%s   # Email to which notifications will be sent
-""" % (config["cluster"]["step_alignment"]["time_limit"], config["cluster"]["step_alignment"]["queue"], 
+module load python/2.7.14 gcc/6.4.0 
+module load trimmomatic/0.36 bowtie2/2.2.9 samtools/1.3.1 picard/2.10.7 meme/5.0.5 bedops/2.4.35 bedtools/2.26.0 kentutils/20180716 r/3.3.3 java/1.8.0_192
+""" % (config["cluster"]["step_alignment"]["time_limit"],  
 	config["cluster"]["step_alignment"]["memory"], config["cluster"]["email"])
 
 	path="""trimmomaticbin=%s
@@ -108,13 +109,14 @@
 #SBATCH -N 1                               # Request one node (if you request more than one core with -n, also using
                                            # -N 1 means all cores will be on the same node)
 #SBATCH -t %s                         # Runtime in D-HH:MM format
-#SBATCH -p %s                           # Partition to run in
 #SBATCH --mem=%d                        # Memory total in MB (for all cores)
 #SBATCH -o hostname_%%j.out                 # File to which STDOUT will be written, including job ID
 #SBATCH -e hostname_%%j.err                 # File to which STDERR will be written, including job ID
 #SBATCH --mail-type=ALL                    # Type of email notification- BEGIN,END,FAIL,ALL
 #SBATCH --mail-user=%s   # Email to which notifications will be sent
-""" % (config["cluster"]["step_process_bam"]["time_limit"], config["cluster"]["step_process_bam"]["queue"], 
+module load python/2.7.14 gcc/6.4.0
+module load trimmomatic/0.36 bowtie2/2.2.9 samtools/1.3.1 picard/2.10.7 meme/5.0.5 bedops/2.4.35 bedtools/2.26.0 kentutils/20180716 r/3.3.3 java/1.8.0_192
+""" % (config["cluster"]["step_process_bam"]["time_limit"],  
 	config["cluster"]["step_process_bam"]["memory"], config["cluster"]["email"])
 
 	p_pythonbase = config["pythonbin"].rstrip("/").rstrip("/bin")
@@ -269,13 +271,14 @@
 #SBATCH -N 1                               # Request one node (if you request more than one core with -n, also using
                                            # -N 1 means all cores will be on the same node)
 #SBATCH -t %s                         # Runtime in D-HH:MM format
-#SBATCH -p %s                           # Partition to run in
 #SBATCH --mem=%s                        # Memory total in MB (for all cores)
 #SBATCH -o hostname_%%j.out                 # File to which STDOUT will be written, including job ID
 #SBATCH -e hostname_%%j.err                 # File to which STDERR will be written, including job ID
 #SBATCH --mail-type=ALL                    # Type of email notification- BEGIN,END,FAIL,ALL
 #SBATCH --mail-user=%s   # Email to which notifications will be sent
-""" % (config["cluster"]["step_motif_find"]["time_limit"], config["cluster"]["step_motif_find"]["queue"], 
+module load python/2.7.14 gcc/6.4.0 
+module load trimmomatic/0.36 bowtie2/2.2.9 samtools/1.3.1 picard/2.10.7 meme/5.0.5 bedops/2.4.35 bedtools/2.26.0 kentutils/20180716 r/3.3.3 java/1.8.0_192
+""" % (config["cluster"]["step_motif_find"]["time_limit"],  
 	config["cluster"]["step_motif_find"]["memory"], config["cluster"]["email"])
 	
 	scripts = """memebin=%s
@@ -369,13 +372,14 @@
 #SBATCH -N 1                               # Request one node (if you request more than one core with -n, also using
                                            # -N 1 means all cores will be on the same node)
 #SBATCH -t %s                         # Runtime in D-HH:MM format
-#SBATCH -p %s                           # Partition to run in
 #SBATCH --mem=%s                        # Memory total in MB (for all cores)
 #SBATCH -o hostname_%%j.out                 # File to which STDOUT will be written, including job ID
 #SBATCH -e hostname_%%j.err                 # File to which STDERR will be written, including job ID
 #SBATCH --mail-type=ALL                    # Type of email notification- BEGIN,END,FAIL,ALL
 #SBATCH --mail-user=%s   # Email to which notifications will be sent
-""" % (config["cluster"]["step_footprinting"]["time_limit"], config["cluster"]["step_footprinting"]["queue"], 
+module load python/2.7.14 gcc/6.4.0 
+module load trimmomatic/0.36 bowtie2/2.2.9 samtools/1.3.1 picard/2.10.7 meme/5.0.5 bedops/2.4.35 bedtools/2.26.0 kentutils/20180716 r/3.3.3 java/1.8.0_192
+""" % (config["cluster"]["step_footprinting"]["time_limit"],  
 	config["cluster"]["step_footprinting"]["memory"], config["cluster"]["email"])
 
 	scripts = """
@@ -645,13 +649,14 @@
 #SBATCH -N 1                               # Request one node (if you request more than one core with -n, also using
                                            # -N 1 means all cores will be on the same node)
 #SBATCH -t %s                         # Runtime in D-HH:MM format
-#SBATCH -p %s                           # Partition to run in
 #SBATCH --mem=%s                        # Memory total in MB (for all cores)
 #SBATCH -o hostname_%%j.out                 # File to which STDOUT will be written, including job ID
 #SBATCH -e hostname_%%j.err                 # File to which STDERR will be written, including job ID
 #SBATCH --mail-type=ALL                    # Type of email notification- BEGIN,END,FAIL,ALL
 #SBATCH --mail-user=%s   # Email to which notifications will be sent
-\"\"\" % (config["cluster"]["step_footprinting"]["time_limit"], config["cluster"]["step_footprinting"]["queue"], 
+module load python/2.7.14 gcc/6.4.0 
+module load trimmomatic/0.36 bowtie2/2.2.9 samtools/1.3.1 picard/2.10.7 meme/5.0.5 bedops/2.4.35 bedtools/2.26.0 kentutils/20180716 r/3.3.3 java/1.8.0_192
+\"\"\" % (config["cluster"]["step_footprinting"]["time_limit"],  
 	config["cluster"]["step_footprinting"]["memory"], config["cluster"]["email"])
 
 	script = \"\"\"
--- qzhudfci-cutruntools-1d884456d2b9/config.json.orig	2019-08-08 22:48:25.377972030 +0000
+++ qzhudfci-cutruntools-1d884456d2b9/config.json	2019-08-09 20:12:13.197842765 +0000
@@ -1,29 +1,29 @@
 {
-    "Rscriptbin": "/n/app/R/3.3.3/bin", 
-    "pythonbin": "/n/app/python/2.7.12/bin", 
-    "perlbin": "/n/app/perl/5.24.0/bin",
-    "javabin": "/n/app/java/jdk-1.8u112/bin",
-    "trimmomaticbin": "/n/app/trimmomatic/0.36/bin", 
+    "Rscriptbin": "${EBROOTR}/bin", 
+    "pythonbin": "${EBROOTPYTHON}/bin", 
+    "perlbin": "${EBROOTPERL}/bin",
+    "javabin": "${EBROOTJAVA}/bin",
+    "trimmomaticbin": "${EBROOTTRIMMOMATIC}", 
     "trimmomaticjarfile": "trimmomatic-0.36.jar", 
-    "bowtie2bin": "/n/app/bowtie2/2.2.9/bin", 
-    "samtoolsbin": "/n/app/samtools/1.3.1/bin", 
-    "adapterpath": "/home/qz64/cutrun_pipeline/adapters", 
-    "picardbin": "/n/app/picard/2.8.0/bin", 
-    "picardjarfile": "picard-2.8.0.jar", 
-    "macs2bin": "/n/app/macs2/2.1.1.20160309/bin", 
-    "macs2pythonlib": "/n/app/macs2/2.1.1.20160309/lib/python2.7/site-packages",
-    "kseqbin": "/home/qz64/cutrun_pipeline", 
-    "memebin": "/home/qz64/meme/bin", 
-    "bedopsbin": "/n/app/bedops/2.4.30", 
-    "bedtoolsbin": "/n/app/bedtools/2.26.0/bin", 
-    "makecutmatrixbin": "/home/qz64/.local/bin", 
+    "bowtie2bin": "${EBROOTBOWTIE2}/bin", 
+    "samtoolsbin": "${EBROOTSAMTOOLS}/bin", 
+    "adapterpath": "${EBROOTCUTRUN}/adapters", 
+    "picardbin": "${EBROOTPICARD}", 
+    "picardjarfile": "picard.jar", 
+    "macs2bin": "${EBROOTCUTRUN}/bin", 
+    "macs2pythonlib": "${EBROOTCUTRUN}/lib/python2.7/site-packages",
+    "kseqbin": "${EBROOTCUTRUN}", 
+    "memebin": "${EBROOTMEME}/bin", 
+    "bedopsbin": "${EBROOTBEDOPS}/bin", 
+    "bedtoolsbin": "${EBROOTBEDTOOLS}/bin", 
+    "makecutmatrixbin": "${EBROOTCUTRUN}/bin", 
     "bt2idx": "/n/groups/shared_databases/bowtie2_indexes", 
-    "genome_sequence": "/home/qz64/chrom.hg19/hg19.fa", 
+    "genome_sequence": "${EBROOTCUTRUN}/chrom.hg19/hg19.fa", 
     "extratoolsbin": "/home/qz64/cutrun_pipeline", 
     "extrasettings": "/home/qz64/cutrun_pipeline", 
     "input/output": {
-        "fastq_directory": "/n/scratch2/qz64/Nan_18_demo/sorted.chr11", 
-        "workdir": "/n/scratch2/qz64/workdir", 
+        "fastq_directory": "/home/aroudgar/src/wrf", 
+        "workdir": "workdir", 
         "fastq_sequence_length": 42, 
         "organism_build": "hg19"
     }, 
