##
# Contributor: 
# Ali Kerrache, April 2017.
# Maxime Boissonneault, June 2017
##

# Lammps: Stable Version - 21Aug2017 

name = 'LAMMPS'

# see http://lammps.sandia.gov/bug.html 
# for overview of stable versions and matching date/SVN rev/Git tag

version = '20170811'
versionsuffix = '-omp'
modaltsoftname = 'lammps-omp'

homepage = 'http://lammps.sandia.gov/'
description = """ LAMMPS (Large-scale Atomic/Molecular Massively Parallel Simulator) is 
 a classical molecular dynamics simulation. LAMMPS has potentials for solid-state materials 
 (metals, semiconductors) and soft matter (biomolecules, polymers) and coarse-grained or 
 mesoscopic systems. It can be used to model atoms or, more generically, as a parallel 
 particle simulator at the atomic, meso, or continuum scale. It can be coupled to various 
 programs. The following packages are not included within this version:
 -GPU, -KOKKOS, -MSCG, -USER-INTEL, -USER-QUIP"""

toolchain = {'name': 'iomkl', 'version': '2016.4.11'}
 
source_urls = [ 'https://github.com/lammps/lammps/archive/' ]
sources = [ 'stable_11Aug2017.tar.gz' ]

builddependencies = [
        ('Python', '2.7.14'),
]
dependencies = [
        ('HDF5','1.8.18'),
        ('Eigen', '3.3.2'),
        ('Voro++', '0.4.6'),
        ('VTK', '6.3.0'),
        ('KIM', '1.8.2'),
        #('Quip', '1.1.8'),
        ('FFTW', '3.3.6', '-mpi'),
        ('FFmpeg', '3.1.7', "-nix"),
        ('netCDF', '4.4.1.1'),
        ('QuantumESPRESSO', '6.1'),
]

patches = [ 'LAMMPS-20170811.patch' ]

# Will go to the lib/PKGLIB folder and use "make -f <makefile>" 
# where <makefile> is the most appropriate makefile (in order, 
# mpicc, mpic++, cc, cxx, f90, gcc, g++, gfortran, 
# lammps) for each PKGLIB in packaged_libraries:

packaged_libraries = [ 
	('qmmm', 'Makefile.ifort'), 
	('poems', 'Makefile.mpi'),      # Works also with: Makefile.icc 
	('reax', 'Makefile.mpi'),       # Works also with: Makefile.ifort
 	('atc', 'Makefile.icc'),  
	('meam', 'Makefile.ifort'), 
	('awpmd', 'Makefile.mpicc'), 
	('colvars', 'Makefile.mpi'),
	('h5md', 'Makefile.h5cc'),
]

# Will run "make yes-PKG" for each PKG in this list:

packages_yes = [ 
         'ASPHERE', 'BODY', 'CLASS2', 'COLLOID', 'COMPRESS', 'CORESHELL',
         'DIPOLE', 'GRANULAR', 'KIM', 'KSPACE', 'MANYBODY', 'MC', 'MEAM', 
         'MISC', 'MOLECULE', 'MPIIO', 'OPT', 'POEMS', 'PERI', 'PYTHON', 
         'QEQ', 'REAX', 'REPLICA', 'RIGID', 'SHOCK', 'SNAP', 'SRD', 
         'USER-ATC', 'USER-AWPMD', 'USER-CGDNA', 'USER-CGSDK', 
         'USER-COLVARS', 'USER-DIFFRACTION', 'USER-DPD', 'USER-DRUDE', 
         'USER-EFF', 'USER-FEP', 'USER-H5MD', 'USER-LB', 'USER-MANIFOLD', 
         'USER-MOLFILE', 'USER-NETCDF', 'USER-MEAMC', 'USER-MGPT', 
         'USER-MISC', 'USER-OMP','USER-PHONON', 'USER-QMMM', 'USER-QTB', 
         'USER-QUIP', 'USER-REAXC', 'USER-SMD', 'USER-SMTBQ', 'USER-SPH', 
         'USER-TALLY', 'USER-VTK', 'VORONOI',
] 

# Will run "make no-PKG" for each PKG in this list:

packages_no = [ 'GPU', 'KOKKOS', 'MSCG', 'USER-INTEL', 'USER-QUIP' ]

user_omp = True
build_type = "icc_openmpi"

build_shared_libs = False
build_static_libs = False

modextrapaths = {'EBPYTHONPREFIXES': '' }
moduleclass = 'chem'
modluafooter = """
family("lammps")
"""

# End of EasyBuild file.
