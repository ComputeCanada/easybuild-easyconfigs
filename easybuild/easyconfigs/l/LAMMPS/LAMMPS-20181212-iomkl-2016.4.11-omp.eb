##
# Contributor: 
# Ali Kerrache, April 2017.
# Maxime Boissonneault, June 2017
##

# Lammps: Stable Version - 12Dec18 

name = 'LAMMPS'

# see http://lammps.sandia.gov/bug.html 
# for overview of stable versions and matching date/SVN rev/Git tag

version = '20181212'
versionsuffix = '-omp'
modaltsoftname = 'lammps-omp'

homepage = 'http://lammps.sandia.gov/'
description = """ LAMMPS (Large-scale Atomic/Molecular Massively Parallel Simulator) is 
 a classical molecular dynamics simulation. LAMMPS has potentials for solid-state materials 
 (metals, semiconductors) and soft matter (biomolecules, polymers) and coarse-grained or 
 mesoscopic systems. It can be used to model atoms or, more generically, as a parallel 
 particle simulator at the atomic, meso, or continuum scale. It can be coupled to various 
 programs. The following packages are not included within this version:
"""

toolchain = {'name': 'iomkl', 'version': '2016.4.11'}
toolchainopts = {'usempi': True, 'openmp': True, 'pic': True}

source_urls = ['https://lammps.sandia.gov/tars/']
sources = ['%(namelower)s-12Dec18.tar.gz']

patches = [
    '%(namelower)s-%(version)s-ebroot.patch',
    'vmd-1.9.3-plugins-%(name)s-%(version)s.patch',
]

# List of packages for the current version:

# ASPHERE, BODY, CLASS2, COLLOID, COMPRESS, CORESHELL, DIPOLE, GPU, GRANULAR, 
# KIM, KOKKOS, KSPACE, LATTE, MANYBODY, MC, MEAM, MESSAGE, MISC, MOLECULE, 
# MPIIO, MSCG, OPT, PERI, POEMS, PYTHON, QEQ, REAX, REPLICA, RIGID, SHOCK, 
# SNAP, SPIN, SRD, USER-ATC, USER-AWPMD, USER-BOCS, USER-CGDNA, USER-CGSDK, 
# USER-COLVARS, USER-DIFFRACTION, USER-DPD, USER-DRUDE, USER-EFF, USER-FEP, 
# USER-H5MD, USER-INTEL, USER-LB, USER-MANIFOLD, USER-MEAMC, USER-MESO, 
# USER-MGPT, USER-MISC, USER-MOFFF, USER-MOLFILE, USER-NETCDF, USER-OMP, 
# USER-PHONON, USER-PLUMED, USER-PTM, USER-QMMM, USER-QTB, USER-QUIP, 
# USER-REAXC, USER-SCAFACOS, USER-SDPD, USER-SMD, USER-SMTBQ, USER-SPH, 
# USER-TALLY, USER-UEF, USER-VTK, VORONOI

dependencies = [
    ('Python', '2.7.14'),
    ('HDF5','1.8.18'),
    ('Eigen', '3.3.2'),
    ('Voro++', '0.4.6'),
    ('VTK', '6.3.0'),
    ('KIM', '1.8.2'),
    ('MSCG', '1.7.3.1'),
    #('Quip', '1.1.8'),
    ('FFTW', '3.3.6', '-mpi'),
    #('FFmpeg', '3.1.7', "-nix"),
    ('netCDF', '4.4.1.1'),
    ('QuantumESPRESSO', '6.1'),
]

# Will go to the lib/PKGLIB folder and use "make -f <makefile>" 
# where <makefile> is the most appropriate makefile (in order, 
# mpicc, mpic++, cc, cxx, f90, gcc, g++, gfortran, 
# lammps) for each PKGLIB in packaged_libraries:

packaged_libraries = [ 
    ('qmmm', 'Makefile.ifort'), 
    ('poems', 'Makefile.mpi'),      # Works also with: Makefile.icc 
    ('reax', 'Makefile.mpi'),       # Works also with: Makefile.ifort
    ('atc', 'Makefile.icc'),  
    ('meam', 'Makefile.ifort'), 
    ('awpmd', 'Makefile.mpicc'), 
    ('colvars', 'Makefile.mpi'),
    ('h5md', 'Makefile.h5cc'),
]

# Will run "make yes-PKG" for each PKG in this list:

packages_yes = [
    'ASPHERE', 'BODY', 'CLASS2', 'COLLOID', 'COMPRESS', 'CORESHELL', 'DIPOLE', 
    'GRANULAR', 'KIM', 'KOKKOS', 'KSPACE', 'MANYBODY', 'MC', 'MEAM', 
    'MISC', 'MOLECULE', 'MPIIO', 'OPT', 'PERI', 'POEMS', 'PYTHON', 'QEQ', 'REAX', 
    'REPLICA', 'RIGID', 'SHOCK', 'SNAP', 'SPIN', 'SRD', 'USER-ATC', 'USER-AWPMD', 
    'USER-BOCS', 'USER-CGDNA', 'USER-CGSDK', 'USER-COLVARS', 'USER-DIFFRACTION', 
    'USER-DPD', 'USER-DRUDE', 'USER-EFF', 'USER-FEP', 'USER-H5MD', 'USER-LB', 
    'USER-MANIFOLD', 'USER-MEAMC', 'USER-MESO', 'USER-MGPT', 'USER-MISC', 
    'USER-MOFFF', 'USER-MOLFILE', 'USER-NETCDF', 'USER-OMP', 'USER-PHONON', 
    'USER-PTM', 'USER-QMMM', 'USER-QTB', 'USER-REAXC', 'USER-SDPD', 'USER-SMD', 
     'USER-SMTBQ', 'USER-SPH', 'USER-TALLY', 'USER-UEF', 'USER-VTK', 'VORONOI', 
] 

# Will run "make no-PKG" for each PKG in this list:

packages_no = [ 
    'GPU', 'LATTE', 'MESSAGE', 'MSCG', 'USER-INTEL',
    'USER-PLUMED', 'USER-QUIP', 'USER-SCAFACOS', 
]

parallel = 8

# Decide what directories to include in the installation directory:

build_doc = False       # Includes the "doc" directory.
build_examples = True   # Includes "examples" directory.
build_bench = True      # Includes "bench" directory.

build_type = "icc_openmpi"

build_shared_libs = False
build_static_libs = False

modextravars =  {
    'LAMMPS_EXAMPLES': '%(installdir)s/share/examples',
    'LAMMPS_POTENTIALS': '%(installdir)s/share/potentials',
}

modloadmsg = """ For more more information about the packages within this version:

  1. To see the installed packages: 
     cat ${EBROOTLAMMPS}/list-packages.txt | grep -a "Installed YES:"
  2. To see the non-installed packages: 
     cat ${EBROOTLAMMPS}/list-packages.txt | grep -a "Installed  NO:"

"""

moduleclass = 'chem'
modluafooter = """
family("lammps")
"""
