easyblock = 'Bundle'

name = 'Apptainer'
version = '1.2.4'

homepage = 'https://apptainer.org'
description = """Apptainer/Singularity is an application containerization solution for High-Performance Computing (HPC). The goal
of Apptainer is to allow for "mobility of computing": an application containerized on one Linux system should
be able to run on another system, as it is, and without the need to reconcile software dependencies and Linux
version differences between the source and target systems."""

toolchain = SYSTEM

default_easyblock = 'ConfigureMake'

default_component_specs = {
    'sources': [SOURCELOWER_TAR_GZ],
    'start_dir': '%(name)s-%(version)s',
}

builddependencies = [('Go', '1.21.3')]

local_wrapper_script = """#!/usr/bin/env bash

if [[ -z "$APPTAINER_TMPDIR" ]]; then
        export APPTAINER_TMPDIR="/var/tmp"
        if [[ -d "/localscratch" && -w "/localscratch" ]]; then
                export APPTAINER_TMPDIR="/localscratch"
        fi
fi
if [[ "$CC_CLUSTER" == "narval" || "$CC_CLUSTER" == "beluga" ]]; then
	if [[ "$(cat /proc/sys/user/max_user_namespaces)" == "0" ]]; then
		echo "Temporarily running privileged Apptainer 1.1" > /dev/stderr
		echo "because user namespaces have been disabled" > /dev/stderr
		exec /opt/software/apptainer-1.1/bin/apptainer ${1+"$@"}
	fi
fi
exec %(installdir)s/bin/apptainer.bin ${1+"$@"}"""

components = [
    ('apptainer', version, {
        'source_urls': ['https://github.com/%(name)s/%(name)s/releases/download/v%(version)s'],
        'patches': [
            'Apptainer-1.1.3_mksquashfs.patch',
            'Apptainer-1.1.8_libnvidia-nvvm.patch',
        ],
        'checksums': [
            'cfc7fcb5eb2d9479557ea982a17d9f1f4ca6cd96f9af70ad8c53da435caee00e',
            '38a3da492afcfa5b80538803a3fc4433fa7ed7e93822ea5ddd4a10c87046005d',
            'cfc4684badf7dcc34e5616c0d372c8c2616774ec65dcead70528250200f646a8',
        ],
        'configure_cmd': './mconfig',
        'prebuildopts': 'cd builddir &&',
        'preinstallopts': 'cd builddir &&',
        'installopts': (' && mv %(installdir)s/bin/apptainer{,.bin}'
                        ' && echo \'' + local_wrapper_script + '\' > %(installdir)s/bin/apptainer'
                        ' && chmod 755 %(installdir)s/bin/apptainer'),
    }),
    ('squashfuse', '0.2.0', {
        'source_urls': ['https://github.com/vasi/%(name)s/archive/%(version)s'],
        'checksums': ['5f088257e877cd8f5fc1232801b4d412b44a017054953acc11bc16a58462b1b0'],
        'preconfigopts': './autogen.sh && CFLAGS=-std=c99',
        'configopts': '--enable-multithreading',
        'buildopts': 'squashfuse_ll',
        'install_cmd': 'cp squashfuse_ll %(installdir)s/libexec/apptainer/bin',
    }),
    ('gocryptfs', '2.4.0', {
        'source_urls': ['https://github.com/rfjakob/gocryptfs/archive/v%(version)s'],
	'checksums': ['a36d47f546b7deb87e291066a09d324015dbada123de355f41d035ba7a9d6b2b'],
        'sources': ['gocryptfs-%(version)s.tar.gz'],
        'skipsteps': ['configure'],
        'build_cmd': './build-without-openssl.bash',
        'install_cmd': 'cp gocryptfs %(installdir)s/libexec/apptainer/bin',
    }),
    ('fakeroot', '1.32.1', {
        'source_urls': ['https://ftp.debian.org/debian/pool/main/f/%(name)s'],
        'sources': ['%(name)s_%(version)s.orig.tar.gz'],
        'checksums': ['c072b0f65bafc4cc5b6112f7c61185f5170ce4cb0c410d1681c1af4a183e94e6'],
        'configopts': '--prefix=%(installdir)s/libexec/apptainer --program-suffix=-sysv --disable-static',
        'installopts': (' && cd %(installdir)s/libexec/apptainer ' +
                        ' && rm -rf {lib/libfakeroot.*,share}' +
                        ' && mv lib/libfakeroot-{0,sysv}.so' +
                        ' && patchelf --set-interpreter /lib64/ld-linux-x86-64.so.2 bin/faked-sysv'),
        # use OS libs in faked-sysv so it generally works inside containers.
    }),
]

postinstallcmds = [
    'sed -i "s@^# binary path =@binary path =' +
     ' \\$PATH:%(installdir)s/bin:$EBROOTGENTOO/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin@"' +
     ' %(installdir)s/etc/apptainer/apptainer.conf',
    'sed -i "s@max loop devices = 256@max loop devices = 2048@" %(installdir)s/etc/apptainer/apptainer.conf',
]

sanity_check_paths = {
    'files': ['bin/apptainer', 'libexec/apptainer/bin/squashfuse_ll', 'libexec/apptainer/bin/fakeroot-sysv',
              'libexec/apptainer/bin/gocryptfs'],
    'dirs': [],
}

sanity_check_commands = [('apptainer', '--version')]

moduleclass = 'tools'
