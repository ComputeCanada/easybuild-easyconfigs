easyblock = 'EB_Amber'

name = 'AmberTools'
local_ambertools_ver = 23
# Patch levels from http://ambermd.org/AmberPatches.php and http://ambermd.org/ATPatches.php
patchlevels = (5, 0)  # (AmberTools, Amber)
version = '%s.%s' % (local_ambertools_ver, patchlevels[0])

homepage = "https://ambermd.org/AmberTools.php"
description = """AmberTools consists of several independently developed packages that work well by themselves,
 and with Amber itself. The suite can also be used to carry out complete molecular dynamics simulations,
 with either explicit water or generalized Born solvent models."""

toolchain = {'name': 'gofbc', 'version': '2023a'}
toolchainopts = {'usempi': True, 'openmp': True}

# download requires registration
local_download_credentials = '?Name=Easybuild&Institution=Easybuild&City=Internet&State=Other&Country=Belgium'
source_urls = ['https://ambermd.org/cgi-bin/AmberTools%s-get.pl' % local_ambertools_ver]
sources = [{
    'download_filename': local_download_credentials,
    'filename': 'AmberTools%s.tar.bz2' % local_ambertools_ver,
}]
patches = [
    'AmberTools-20_cmake-locate-netcdf.patch',
    'AmberTools-20_fix_missing_MPI_LIBRARY_error.patch',
    'AmberTools-20_fix_xblas_missing_make_dependency.patch',
    'AmberTools-22_CMake-FlexiBLAS.patch',
    'AmberTools-21_fix_incorrect_dvout_call.patch',
    'AmberTools-21_fix_more_blas_argument_problems.patch',
    'AmberTools-21_fix_potential_use_before_init.patch',
    'AmberTools-21_fix_rism_argument_mismatch.patch',
    'AmberTools-21_fix_xray_fftpack_arg_mismatch.patch',
    'AmberTools-22_fix_test_missing_cuda_dir.patch',
]
checksums = [
    'debb52e6ef2e1b4eaa917a8b4d4934bd2388659c660501a81ea044903bf9ee9d',  # AmberTools23.tar.bz2
    '473e07c53b6f641d96d333974a6af2e03413fecef79f879d3fdecf7fecaab4d0',  # AmberTools-20_cmake-locate-netcdf.patch
    # AmberTools-20_fix_missing_MPI_LIBRARY_error.patch
    '0b89a0624167bc23876bcdefcb1055f591e38e3bd559a71d5749e342bd311acc',
    # AmberTools-20_fix_xblas_missing_make_dependency.patch
    'ff25e91fdc72347a778c3837b581e174d6a8c71efa5b46e11391b18bca84fd65',
    '9543812c24c4b7842f64f1f8abaf2c92b5c4c0fadcdbd9811e76b81a778f0d36',  # AmberTools-22_CMake-FlexiBLAS.patch
    '1054d4007f5c79126a41582e1e80514267cf406416ed6c471574cd708b16319b',  # AmberTools-21_fix_incorrect_dvout_call.patch
    # AmberTools-21_fix_more_blas_argument_problems.patch
    'c6279b57752239184b942d37f760749494ae0eff95236f3368c76ac0d2726a7c',
    # AmberTools-21_fix_potential_use_before_init.patch
    '377e645b5bd2c91ebb4d0b6fbca0407a94289e5ddc5b1e7ed0cb0b0724ad2139',
    # AmberTools-21_fix_rism_argument_mismatch.patch
    '14255e5739cec39303df570f06820c7532f7395e1b73b1e4104377984e2c9fc1',
    # AmberTools-21_fix_xray_fftpack_arg_mismatch.patch
    '99c954e693659efc2a1d121f91510f56408006f0751d91595f45a34b03364e2f',
    'fb1ab74314d7816169bb9f3f527b78085654aae2825c52cebf50a5760401b737',  # AmberTools-22_fix_test_missing_cuda_dir.patch
]

builddependencies = [
    ('CMake', '3.26.3'),
    ('Bison', '3.8.2'),
    ('flex', '2.6.4'),
    ('make', '4.4.1'),
]

dependencies = [
    ('zlib', '1.2.13'),
    ('bzip2', '1.0.8'),
    ('Python', '3.11'),
    ('SciPy-Stack', '2023b'),  # mpi4py required for MMPBSA
    ('Perl', '5.36.1'),
    ('Boost', '1.82.0'),
    ('libreadline', '8.1'),
    ('matplotlib', '3.4.3'),
    ('netCDF', '4.9.2'),
    ('netCDF-Fortran', '4.6.1'),
    ('arpack-ng', '3.9.1'),
    ('PnetCDF', '1.12.3'),
    ('Tkinter', '3.11.3'),
    ('X11', '20230603'),
    ('FFTW.MPI', '3.3.10'),
    ('mpi4py', '3.1.4'),
]

separate_build_dir = True
# All tests are expected to pass or be skipped
runtest = True

#static = False

preconfigopts = "sed -i 's/\\(${CUDA_VERSION} VERSION_LESS 12.\\)2/\\13/' ../cmake/CudaConfig.cmake && "
preconfigopts += "sed -i 's/\\(${CUDA_VERSION} VERSION_LESS_EQUAL 12.\\)0/\\12/' ../AmberTools/src/quick/quick-cmake/QUICKCudaConfig.cmake && "
preconfigopts += "sed -i 's/NOT nccl/nccl/' ../cmake/PMEMDCompilerFlags.cmake && "

configopts = ' ' 
configopts =  ' -DBUILD_QUICK=TRUE '    
#configopts += ' -DCUDA=TRUE' => handled by EasyBlock
#configopts += ' -DOPENMP=TRUE' => handled by EasyBlock and toolchainopts
configopts += ' -DMPI=TRUE'  #  => handled by the EasyBlock and toolchainopts
#configopts += ' -DCOMPILER=GNU'   # => compiler auto in EasyBlock
#configopts += ' -DDOWNLOAD_MINICONDA=FALSE' => handled in EasyBlock
#configopts += ' -DTRUST_SYSTEM_LIBS=TRUE' => handled in EasyBlock
configopts += ' -DFORCE_DISABLE_LIBS=plumed'
configopts += ' -DINSTALL_TESTS=TRUE'  #=> removed by EasyBlock

#configopts += ' -DNetCDF_INCLUDES=$EBROOTNETCDFMINFORTRAN/include '

postinstallcmds = [
   ' '.join([
        '/cvmfs/soft.computecanada.ca/easybuild/bin/setrpaths.sh',
        '--path %(installdir)s/',
        '--any_interpreter',
        '--add_origin',
        '--add_path %(installdir)s/lib',
    ])
]

modextravars = {
    'AMBERHOME': '%(installdir)s',
    'QUICK_BASIS': '%(installdir)s/AmberTools/src/quick/basis',
}

modextrapaths = {
    'EBPYTHONPREFIXES': [''],
    'PERL5LIB': ['lib/perl'],
}

moduleclass = 'chem'
