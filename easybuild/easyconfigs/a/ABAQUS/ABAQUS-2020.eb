name = 'ABAQUS'
version = '2020'

homepage = 'http://www.simulia.com/products/abaqus_fea.html'
description = """Finite Element Analysis software for modeling, visualization and best-in-class implicit and explicit dynamics FEA."""

toolchain = SYSTEM

#sources = ['%(name)s-%(version)s.tgz']
sources = [SOURCE_TGZ]

# sha256sum ABAQUS-2020.tgz
checksums = ['0c739e1a54fc407a3e2831d04f4fa3f922259f745f03c3a40f92834e5b3ce3cc']

postinstallcmds = [
       "for d in $(find %(installdir)s -name 'bin' -o -name 'Linux64' -o -name 'Linux_x64' -o -name 'lnamd64' -o -name 'lib' -o -name 'amd64' -o -name 'machines'); \
         do echo Calling setrpaths.sh --path $d; /cvmfs/soft.computecanada.ca/easybuild/bin/setrpaths.sh --path $d; done",
       "echo Calling setrpaths.sh --path %(installdir)s/license/linux_a64/code/bin --any_interpreter; \
         /cvmfs/soft.computecanada.ca/easybuild/bin/setrpaths.sh --path %(installdir)s/license/linux_a64/code/bin --any_interpreter;",
       "ln -s %(installdir)s/Commands/abq2020hf1 %(installdir)s/Commands/abaqus",
       "ln -s %(installdir)s/EstProducts/linux_a64/code/bin/ABQLauncher %(installdir)s/Commands/abq2020hf1",
]

local_gccver = '8.3.0'
local_binutilsver = '2.32'
dependencies = [
    ('GCCcore', local_gccver),
    ('binutils', local_binutilsver, '-GCCcore-%s' % local_gccver),
]

moduleclass = 'cae'

modluafooter = """
require("SitePackage")
local found, path = find_and_define_license_file("__ABAQUS_LICENSE_FILE","abaqus")
if (not found) then
        local error_message = [[
        We did not find a suitable license for Abaqus. If you have access to one, you can create the file $HOME/.licenses/abaqus.lic with the license information. If you think you should have access to one as part of your institution, please write to support@computecanada.ca so that we can configure it.

        Nous n'avons pas trouve de licence utilisable pour Abaqus. Si vous avez acces a une licence de Abaqus, vous pouvez creer le fichier $HOME/.licenses/abaqus.lic avec l'information de la licence. Si vous pensez que vous devriez automatiquement avoir acces a une licence via votre institution, veuillez ecrire a support@calculcanada.ca pour que nous puissions la configurer.
        ]]
        LmodError(error_message)
elseif (path) then
    -- load the license file which should contain Lua commands to set the license path
    assert(loadfile(path))()
end
"""
