name = 'Amber'
local_amber_ver = 20
local_ambertools_ver = 20
# Patch levels from http://ambermd.org/AmberPatches.php and http://ambermd.org/ATPatches.php
patchlevels = (15, 12)  # (AmberTools, Amber)
version = '%s.%s-%s.%s' % (local_amber_ver, patchlevels[1], local_ambertools_ver, patchlevels[0])

homepage = 'http://ambermd.org/amber.html'
description = """Amber (originally Assisted Model Building with Energy Refinement) is software for performing
 molecular dynamics and structure prediction."""

toolchain = {'name': 'gofbc', 'version': '2020.1.403.114'}
toolchainopts = {'openmp': True}

sources = [
    '%%(name)s%s.tar.bz2' % local_amber_ver,
    'AmberTools%s.tar.bz2' % local_ambertools_ver,
]
patches = [
	'Amber-20-AT-20_cuda11.4.patch',
#    'AmberTools-20_cmake-locate-netcdf.patch',
#    'AmberTools-20_fix_missing_MPI_LIBRARY_error.patch',
#    'AmberTools-20_fix_xblas_missing_make_dependency.patch',
]
checksums = [
    'a4c53639441c8cc85adee397933d07856cc4a723c82c6bea585cd76c197ead75',  # Amber20.tar.bz2
    'b1e1f8f277c54e88abc9f590e788bbb2f7a49bcff5e8d8a6eacfaf332a4890f9',  # AmberTools20.tar.bz2
    'f9c514d672792438195f6ce4a0b36bd24cdddbe5cb5ec32f8d2489f8fc097403',  # Amber-20-AT-20_cuda11.4.patch
#    'f55fa930598d5a8e9749e8a22d1f25cab7fcf911d98570e35365dd7f262aaafd',  # AmberTools21.tar.bz2
#    '473e07c53b6f641d96d333974a6af2e03413fecef79f879d3fdecf7fecaab4d0',  # AmberTools-20_cmake-locate-netcdf.patch
    # AmberTools-20_fix_missing_MPI_LIBRARY_error.patch
#    '185040c79c8799d4f2d75139b7c648a1863f3484c4e1baab3470d2cf8d660b65',
    # AmberTools-20_fix_xblas_missing_make_dependency.patch
#    'ff25e91fdc72347a778c3837b581e174d6a8c71efa5b46e11391b18bca84fd65',
]

#builddependencies = [
#    ('Bison', '3.7.1'),
#    ('CMake', '3.18.4'),
#    ('flex', '2.6.4'),
#    ('make', '4.3'),
#]

dependencies = [
#    ('zlib', '1.2.11'),
#    ('bzip2', '1.0.8'),
    ('Python', '3.8'),
    ('SciPy-Stack', '2021a'),
    ('Perl', '5.30.2'),
    ('Boost', '1.72.0'),
#    ('libreadline', '8.0'),
#    ('matplotlib', '3.3.3'),
    ('netCDF', '4.7.4'),
    ('netCDF-Fortran', '4.5.2'),
    ('arpack-ng', '3.8.0'),
    ('PnetCDF', '1.12.2'),
#    ('Tkinter', '3.8.6'),
#    ('X11', '20201008'),
#    ('NCCL', '2.8.3', '-CUDA-%(cudaver)s', True),
    ('FFTW', '3.3.8', '-mpi'), 
    ('mpi4py', '3.0.3'),
]

separate_build_dir = True
# Some CUDA tests differs from expected results
runtest = False

#static = False
configopts = ' ' 
configopts =  ' -DBUILD_QUICK=TRUE '    
#configopts += ' -DCUDA=TRUE' => handled by EasyBlock
#configopts += ' -DOPENMP=TRUE' => handled by EasyBlock and toolchainopts
configopts += ' -DMPI=TRUE'  #  => handled by the EasyBlock and toolchainopts
configopts += ' -DCOMPILER=GNU'   # => compiler auto in EasyBlock
#configopts += ' -DDOWNLOAD_MINICONDA=FALSE' => handled in EasyBlock
#configopts += ' -DTRUST_SYSTEM_LIBS=TRUE' => handled in EasyBlock
configopts += ' -DFORCE_DISABLE_LIBS=plumed'
configopts += ' -DINSTALL_TESTS=TRUE'  #=> removed by EasyBlock

#configopts += ' -DNetCDF_INCLUDES=$EBROOTNETCDFMINFORTRAN/include '
modloadmsg = """Before using AmberTools source the file \033[91m $EBROOTAMBER/amber.sh \033[0m
or add the line \033[91m source $EBROOTAMBER/amber.sh \033[0m to your \033[91m ~/.bash_profile \033[0m
"""

moduleclass = 'chem'
